{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jcqui\\\\OneDrive\\\\Escritorio\\\\henri_barrett\\\\yes-mom\\\\yesmom_next\\\\pages\\\\blog\\\\[blog].js\";\nimport { useRouter } from \"next/router\";\n\nconst CardBlogEspecific = ({\n  currentData\n}) => {\n  const router = useRouter();\n  console.log(router, \"judith\");\n  console.log(currentData, \"judith:)\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Holaaa Per\\xFA \", router.query.blog]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Holaaa Per\\xFA \", currentData.blog._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://localhost:5000/getBlogAll/user?limit=all');\n  const blogs = await res.json();\n  console.log(blogs.lenght, \"ojitoa\"); // Get the paths we want to pre-render based on posts\n\n  const paths = blogs.map(blog => ({\n    params: {\n      blog: String(blog._id)\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  console.log(params, \"ojitos\");\n  const res = await fetch(`http://localhost:5000/getBlog/${params.blog}`);\n  const currentData = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      currentData\n    }\n  };\n}\nexport default CardBlogEspecific;","map":{"version":3,"sources":["C:/Users/jcqui/OneDrive/Escritorio/henri_barrett/yes-mom/yesmom_next/pages/blog/[blog].js"],"names":["useRouter","CardBlogEspecific","currentData","router","console","log","query","blog","_id","getStaticPaths","res","fetch","blogs","json","lenght","paths","map","params","String","fallback","getStaticProps","props"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AACzC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACJI,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,QAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAwB,UAAxB;AAEI,sBACI;AAAA,4BACI;AAAA,oCAAgBC,MAAM,CAACG,KAAP,CAAaC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,oCAAgBL,WAAW,CAACK,IAAZ,CAAiBC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AACFT,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACE,MAAlB,EAAyB,QAAzB,EAJqC,CAKnC;;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,GAAN,CAAWT,IAAD,KAAW;AAEjCU,IAAAA,MAAM,EAAE;AAAEV,MAAAA,IAAI,EAAEW,MAAM,CAACX,IAAI,CAACC,GAAN;AAAd;AAFyB,GAAX,CAAV,CAAd,CANmC,CAWnC;AACA;;AACA,SAAO;AAAEO,IAAAA,KAAF;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAEH,OAAO,eAAeC,cAAf,CAA8B;AAACH,EAAAA;AAAD,CAA9B,EAAwC;AAC3C;AACA;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ,EAAmB,QAAnB;AACA,QAAMP,GAAG,GAAG,MAAMC,KAAK,CAAE,iCAAgCM,MAAM,CAACV,IAAK,EAA9C,CAAvB;AACA,QAAML,WAAW,GAAG,MAAMQ,GAAG,CAACG,IAAJ,EAA1B,CAL2C,CAO3C;AACA;;AACA,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLnB,MAAAA;AADK;AADF,GAAP;AAKD;AAEH,eAAgBD,iBAAhB","sourcesContent":["import { useRouter } from \"next/router\";\r\n\r\nconst CardBlogEspecific = ({currentData}) => {\r\n    const router = useRouter();\r\nconsole.log(router,\"judith\")\r\nconsole.log(currentData,\"judith:)\")\r\n\r\n    return (\r\n        <div>\r\n            <p>Holaaa Perú {router.query.blog}</p>\r\n            <p>Holaaa Perú {currentData.blog._id}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    // Call an external API endpoint to get posts\r\n    const res = await fetch('http://localhost:5000/getBlogAll/user?limit=all')\r\n    const blogs = await res.json()\r\n  console.log(blogs.lenght,\"ojitoa\")\r\n    // Get the paths we want to pre-render based on posts\r\n    const paths = blogs.map((blog) => ({\r\n        \r\n      params: { blog: String(blog._id) },\r\n    }))\r\n  \r\n    // We'll pre-render only these paths at build time.\r\n    // { fallback: false } means other routes should 404.\r\n    return { paths, fallback: false }\r\n  }\r\n\r\nexport async function getStaticProps({params}) {\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    console.log(params,\"ojitos\")\r\n    const res = await fetch(`http://localhost:5000/getBlog/${params.blog}`);\r\n    const currentData = await res.json();\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n      props: {\r\n        currentData,\r\n      },\r\n    };\r\n  }\r\n  \r\nexport default  CardBlogEspecific\r\n"]},"metadata":{},"sourceType":"module"}